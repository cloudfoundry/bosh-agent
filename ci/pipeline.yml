---
resource_types:
  - name: bosh-deployment
    type: docker-image
    source:
      repository: cloudfoundry/bosh-deployment-resource
      username: ((docker.username))
      password: ((docker.password))
  - name: metalink-resource
    type: registry-image
    source:
      repository: dpb587/metalink-repository-resource
      username: ((docker.username))
      password: ((docker.password))
  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final
      username: ((docker.username))
      password: ((docker.password))

resources:
  - name: bosh-agent
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-agent.git
      branch: 2.268.x
      private_key: ((github_deploy_key_bosh-agent.private_key))

  - name: bosh-agent-index
    type: metalink-resource
    source:
      uri: git+ssh://git@github.com:cloudfoundry/bosh-agent-index.git//
      version: 2.268.*
      mirror_files:
        - destination: s3://s3-external-1.amazonaws.com/bosh-agent-binaries/{{.Name}}
      options:
        private_key: ((github_deploy_key_bosh-agent-index.private_key))
      url_handlers:
        - type: s3
          options:
            access_key: ((bosh-agent-s3.username))
            secret_key: ((bosh-agent-s3.password))

  - name: bosh-cli
    type: github-release
    source:
      owner: cloudfoundry
      repository: bosh-cli
      access_token: ((github_public_repo_token))

  - name: bosh-ecosystem-concourse
    type: git
    source:
      uri: git@github.com:pivotal/bosh-ecosystem-concourse.git
      private_key: ((github_deploy_key_bosh_ecosystem_concourse.private_key))

  - name: bosh-agent-registry-image
    type: registry-image
    source:
      repository: bosh/agent
      username: ((docker.username))
      password: ((docker.password))

  - name: bosh-src
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh.git

  - name: golang-release
    type: git
    source:
      uri: https://github.com/bosh-packages/golang-release.git

  - name: azure-stemcell
    type: pivnet
    source:
      api_token: ((pivnet_linux_stemcell_api_token))
      product_slug: stemcells-ubuntu-xenial
      product_version: 621\..*

  - name: integration-vm-deployment
    type: bosh-deployment
    source:
      deployment: bosh-agent-integration-2-268-x
      target: ((iaas_directors_azure-director_bosh_environment))
      client: ((iaas_directors_azure-director_bosh_client.username))
      client_secret: ((iaas_directors_azure-director_bosh_client.password))
      ca_cert: ((iaas_directors_azure-director_bosh_ca_cert.ca))
      jumpbox_ssh_key: ((iaas_directors_azure-director_bosh_jumpbox_ssh.private_key))
      jumpbox_username: ((iaas_directors_azure-director_bosh_jumpbox_username))
      jumpbox_url: ((iaas_directors_azure-director_bosh_jumpbox_ip)):22

  - name: version-semver
    type: semver
    source:
      initial_version: 0.0.1
      key: agent-2.268-current-version
      bucket: bosh-agent-semver
      region_name: us-east-1
      access_key_id: ((bosh-agent-s3.username))
      secret_access_key: ((bosh-agent-s3.password))

  - name: weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [ Saturday ]


jobs:
  - name: bump-deps
    plan:
      - in_parallel:
        - get: weekly
          trigger: true
        - get: bosh-agent
        - get: golang-release
      - task: bump-deps
        file: golang-release/ci/tasks/shared/bump-deps.yml
        input_mapping:
          input_repo: bosh-agent
        output_mapping:
          output_repo: bumped-bosh-agent
      - task: test-unit
        file: bosh-agent/ci/tasks/test-unit.yml
        input_mapping:
          bosh-agent: bumped-bosh-agent
      - put: bosh-agent
        params:
          repository: bumped-bosh-agent
          rebase: true

  - name: test-unit
    plan:
      - get: bosh-agent
        trigger: true
      - task: test-unit
        file: bosh-agent/ci/tasks/test-unit.yml

  - name: test-integration
    serial: true
    plan:
      - in_parallel:
          - get: bosh-agent
            trigger: true
          - get: bosh-ecosystem-concourse
          - get: bosh-agent-registry-image
            trigger: true
          - get: azure-stemcell
            trigger: true
            params:
              globs:
                - "*azure*.tgz"
      - do:
          - task: update-resurrection-config
            image: bosh-agent-registry-image
            config:
              platform: linux
              inputs:
                - name: bosh-agent
                - name: bosh-ecosystem-concourse
              params:
                BOSH_ENVIRONMENT: ((iaas_directors_azure-director_bosh_environment))
                BOSH_CA_CERT: ((iaas_directors_azure-director_bosh_ca_cert.ca))
                BOSH_CLIENT: ((iaas_directors_azure-director_bosh_client.username))
                BOSH_CLIENT_SECRET: ((iaas_directors_azure-director_bosh_client.password))
                JUMPBOX_PRIVATE_KEY: ((iaas_directors_azure-director_bosh_jumpbox_ssh.private_key))
                JUMPBOX_USERNAME: ((iaas_directors_azure-director_bosh_jumpbox_username))
                JUMPBOX_IP: ((iaas_directors_azure-director_bosh_jumpbox_ip))
              run:
                path: /bin/bash
                args:
                  - -c
                  - |
                    source bosh-ecosystem-concourse/tasks/shared/configure_bosh_proxy.sh
                    bosh -n update-config --name 2-268-x-resurrection --type resurrection --var deployment_name=bosh-agent-integration-2-268-x bosh-agent/integration/assets/resurrection_config.yml
          - put: integration-vm-deployment
            params:
              cleanup: true
              manifest: "bosh-agent/integration/assets/agent-deployment.yml"
              stemcells:
                - "azure-stemcell/*.tgz"
              vars:
                deployment_name: bosh-agent-integration-2-268-x
                stemcell_os: ubuntu-xenial
                az: z1
                vm_type: root_disk_integration
          - task: get-agent-info
            image: bosh-agent-registry-image
            config:
              platform: linux
              inputs:
                - name: bosh-agent
                - name: bosh-ecosystem-concourse
              outputs:
                - name: agent-info
              params:
                BOSH_ENVIRONMENT: ((iaas_directors_azure-director_bosh_environment))
                BOSH_CA_CERT: ((iaas_directors_azure-director_bosh_ca_cert.ca))
                BOSH_CLIENT: ((iaas_directors_azure-director_bosh_client.username))
                BOSH_CLIENT_SECRET: ((iaas_directors_azure-director_bosh_client.password))
                JUMPBOX_PRIVATE_KEY: ((iaas_directors_azure-director_bosh_jumpbox_ssh.private_key))
                JUMPBOX_USERNAME: ((iaas_directors_azure-director_bosh_jumpbox_username))
                JUMPBOX_URL: "((iaas_directors_azure-director_bosh_jumpbox_ip)):22"
                CREDHUB_CA_CERT_STRING: ((iaas_directors_azure-director_bosh_credhub_ca_cert.ca))
                CREDHUB_CLIENT: ((iaas_directors_azure-director_bosh_credhub_client.username))
                CREDHUB_SECRET: ((iaas_directors_azure-director_bosh_credhub_client.password))
                CREDHUB_SERVER: ((iaas_directors_azure-director_bosh_credhub_server))
              run:
                path: /bin/bash
                args:
                  - -c
                  - |
                    source bosh-ecosystem-concourse/tasks/shared/configure_credhub_proxies.sh
                    bosh -d bosh-agent-integration-2-268-x instances --json --column ips | jq -r .Tables[].Rows[].ips > agent-info/agent_ip
                    credhub get -n /concourse/bosh-agent-integration-2-268-x/ssh_creds -k private_key > agent-info/agent-creds.pem
                    chmod 600 agent-info/agent-creds.pem
          - task: test-integration
            image: bosh-agent-registry-image
            file: bosh-agent/ci/tasks/test-integration.yml
            params:
              BOSH_DEPLOYMENT: bosh-agent-integration-2-268-x
              BOSH_ENVIRONMENT: ((iaas_directors_azure-director_bosh_environment))
              BOSH_CA_CERT: ((iaas_directors_azure-director_bosh_ca_cert.ca))
              BOSH_CLIENT: ((iaas_directors_azure-director_bosh_client.username))
              BOSH_CLIENT_SECRET: ((iaas_directors_azure-director_bosh_client.password))
              JUMPBOX_PRIVATE_KEY: ((iaas_directors_azure-director_bosh_jumpbox_ssh.private_key))
              JUMPBOX_USERNAME: ((iaas_directors_azure-director_bosh_jumpbox_username))
              JUMPBOX_IP: ((iaas_directors_azure-director_bosh_jumpbox_ip))
        ensure:
          in_parallel:
            - task: update-resurrection-config
              image: bosh-agent-registry-image
              config:
                platform: linux
                inputs:
                  - name: bosh-agent
                  - name: bosh-ecosystem-concourse
                params:
                  BOSH_ENVIRONMENT: ((iaas_directors_azure-director_bosh_environment))
                  BOSH_CA_CERT: ((iaas_directors_azure-director_bosh_ca_cert.ca))
                  BOSH_CLIENT: ((iaas_directors_azure-director_bosh_client.username))
                  BOSH_CLIENT_SECRET: ((iaas_directors_azure-director_bosh_client.password))
                  JUMPBOX_PRIVATE_KEY: ((iaas_directors_azure-director_bosh_jumpbox_ssh.private_key))
                  JUMPBOX_USERNAME: ((iaas_directors_azure-director_bosh_jumpbox_username))
                  JUMPBOX_IP: ((iaas_directors_azure-director_bosh_jumpbox_ip))
                run:
                  path: /bin/bash
                  args:
                    - -c
                    - |
                      source bosh-ecosystem-concourse/tasks/shared/configure_bosh_proxy.sh
                      bosh -n delete-config --name 2-268-x-resurrection --type resurrection
            - put: integration-vm-deployment
              params:
                cleanup: true
                delete:
                  enabled: true
                  force: true

  - name: bosh-integration-tests
    serial: true
    plan:
      - in_parallel:
          - get: bosh-src
          - get: bosh-cli
            params:
              globs:
                - "bosh-cli-*-linux-amd64"
          - get: bosh-agent
            trigger: true
            passed:
              - test-unit
              - test-integration
      - task: tests
        privileged: true
        file: bosh-src/ci/tasks/test-integration.yml
        params:
           DB: postgresql
           DB_VERSION: 15
           
  - name: promote
    serial: true
    plan:
      - in_parallel:
          - trigger: true
            passed:
              - bosh-integration-tests
            get: bosh-agent
          - get: version-semver
            params:
              bump: patch
      - task: assert-version-aligns
        file: bosh-agent/ci/tasks/assert-version-aligns.yml
      - put: version-semver
        params:
          file: version-semver/number
      - put: bosh-agent
        params:
          only_tag: true
          repository: bosh-agent
          tag: version-semver/number
          tag_prefix: v
      - task: build-linux
        file: bosh-agent/ci/tasks/build-linux.yml
      - put: bosh-agent-index
        params:
          files:
            - compiled-linux-*/*
          version: version-semver/number
