#!/bin/bash

while getopts "q" OPTION
do
  case $OPTION in
    q)
      QUIET=true
      ;;
  esac
done

result=0

bin=$(dirname $0)

# Travis randomly kills go builds when using -race
race=$([ "$TRAVIS" != "true" ] && echo "-race")

ignored=(Godeps internal)
echo -e "\n Formatting packages, other than: ${ignored[*]}..."
for i in `ls -1` ; do
  if [ -d "$i" ] && [[ ! ${ignored[*]} =~ "$i" ]] ; then
    $bin/go fmt github.com/cloudfoundry/bosh-agent/${i}/... 2> /dev/null
  fi
done
let "result+=$?"

echo -e "\n Checking with golint..."
$bin/golint
let "result+=$?"

echo -e "\n Installing ginkgo..."
$bin/go install ./internal/github.com/onsi/ginkgo/ginkgo
let "result+=$?"

echo -e "\n Govetting"
$bin/govet
let "result+=$?"

echo -e "\n Checking for unhandled errors"
$bin/test-unhandled-errors
let "result+=$?"

echo -e "\n Testing packages..."
$bin/env ginkgo -r $race -skipPackage="integration,internal" $bin/..
let "result+=$?"

echo -e "\n Running build script to confirm everything compiles..."
$bin/build
let "result+=$?"

if [ ! $QUIET ]; then
  if [ $result -eq 0 ]; then
    echo -e "\n\033[0;32mSUITE SUCCESS\033[0m"
  else
    echo -e "\n\033[0;31mSUITE FAILURE (exit code: $result)\033[0m"
  fi
fi

exit $result
